const { neon } = require('@neondatabase/serverless');
require('dotenv').config();

const sql = neon(process.env.DATABASE_URL);

async function seedEvents() {
  try {
    console.log('üå± Iniciando inserci√≥n de eventos de ejemplo...');

    // Primero, asegurar que existan las categor√≠as
    console.log('üìã Creando categor√≠as...');
    await sql`
      INSERT INTO event_categories (id, name, description, icon, color, active, "updatedAt")
      VALUES 
        ('cat_1', 'Educaci√≥n', 'Ense√±anza y capacitaci√≥n', 'üéì', 'bg-blue-100 text-blue-700', true, ${new Date()}),
        ('cat_2', 'Medio Ambiente', 'Conservaci√≥n y sostenibilidad', 'üå±', 'bg-green-100 text-green-700', true, ${new Date()}),
        ('cat_3', 'Salud', 'Bienestar y salud comunitaria', '‚ù§Ô∏è', 'bg-red-100 text-red-700', true, ${new Date()}),
        ('cat_4', 'Alimentaci√≥n', 'Programas de nutrici√≥n', 'üçΩÔ∏è', 'bg-orange-100 text-orange-700', true, ${new Date()}),
        ('cat_5', 'Tecnolog√≠a', 'Capacitaci√≥n digital', 'üíª', 'bg-purple-100 text-purple-700', true, ${new Date()}),
        ('cat_6', 'Deportes', 'Actividades deportivas', 'üèÜ', 'bg-yellow-100 text-yellow-700', true, ${new Date()}),
        ('cat_7', 'Arte y Cultura', 'Expresi√≥n art√≠stica', 'üé®', 'bg-pink-100 text-pink-700', true, ${new Date()}),
        ('cat_8', 'Construcci√≥n', 'Proyectos comunitarios', 'üî®', 'bg-gray-100 text-gray-700', true, ${new Date()})
      ON CONFLICT (id) DO UPDATE SET
        name = EXCLUDED.name,
        description = EXCLUDED.description,
        icon = EXCLUDED.icon,
        color = EXCLUDED.color,
        active = EXCLUDED.active,
        "updatedAt" = ${new Date()}
    `;
    console.log('‚úÖ Categor√≠as creadas/actualizadas');

    // Crear una organizaci√≥n de ejemplo si no existe
    console.log('üè¢ Creando organizaci√≥n de ejemplo...');
    const orgId = 'org_example_' + Date.now();
    await sql`
      INSERT INTO organizations (id, "userId", name, description, "createdAt", "updatedAt")
      VALUES (${orgId}, 'user_example', 'EcoMar Jalisco', 'Organizaci√≥n dedicada a la conservaci√≥n del medio ambiente', ${new Date()}, ${new Date()})
      ON CONFLICT (id) DO NOTHING
    `;
    console.log('‚úÖ Organizaci√≥n creada');

    // Crear eventos de ejemplo
    console.log('üìÖ Creando eventos de ejemplo...');
    const events = [
      {
        id: 'event_1',
        title: 'Limpieza de Playa Vallarta',
        description: 'Actividad de limpieza en la playa principal de Puerto Vallarta para mantener el ecosistema marino limpio y saludable.',
        organizationId: orgId,
        address: 'Playa Principal, Puerto Vallarta',
        city: 'Puerto Vallarta',
        state: 'Jalisco',
        country: 'M√©xico',
        startDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000), // 2 d√≠as en el futuro
        endDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000 + 4 * 60 * 60 * 1000), // 4 horas despu√©s
        maxVolunteers: 20,
        currentVolunteers: 8,
        skills: ['Trabajo en equipo', 'Resistencia f√≠sica'],
        categoryId: 'cat_2',
        status: 'PUBLISHED',
        requirements: ['Ropa c√≥moda', 'Protector solar', 'Botella de agua'],
        benefits: ['Experiencia en conservaci√≥n', 'Networking', 'Certificado de participaci√≥n'],
        imageUrl: null
      },
      {
        id: 'event_2',
        title: 'Taller de Programaci√≥n para Ni√±os',
        description: 'Ense√±anza b√°sica de programaci√≥n a ni√±os de primaria usando Scratch y herramientas educativas divertidas.',
        organizationId: orgId,
        address: 'Centro Comunitario Zapopan',
        city: 'Guadalajara',
        state: 'Jalisco',
        country: 'M√©xico',
        startDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000), // 5 d√≠as en el futuro
        endDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000 + 3 * 60 * 60 * 1000), // 3 horas despu√©s
        maxVolunteers: 10,
        currentVolunteers: 3,
        skills: ['Programaci√≥n', 'Paciencia', 'Comunicaci√≥n'],
        categoryId: 'cat_1',
        status: 'PUBLISHED',
        requirements: ['Conocimientos b√°sicos de programaci√≥n', 'Disposici√≥n para ense√±ar'],
        benefits: ['Experiencia docente', 'Networking', 'Certificado'],
        imageUrl: null
      },
      {
        id: 'event_3',
        title: 'Donaci√≥n de Alimentos',
        description: 'Recolecci√≥n y distribuci√≥n de alimentos para familias necesitadas en la zona metropolitana de Guadalajara.',
        organizationId: orgId,
        address: 'Centro de Acopio GDL',
        city: 'Zapopan',
        state: 'Jalisco',
        country: 'M√©xico',
        startDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 d√≠as en el futuro
        endDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000 + 6 * 60 * 60 * 1000), // 6 horas despu√©s
        maxVolunteers: 15,
        currentVolunteers: 12,
        skills: ['Organizaci√≥n', 'Trabajo en equipo'],
        categoryId: 'cat_4',
        status: 'PUBLISHED',
        requirements: ['Ropa c√≥moda', 'Disposici√≥n para cargar peso'],
        benefits: ['Experiencia en log√≠stica', 'Impacto social directo'],
        imageUrl: null
      },
      {
        id: 'event_4',
        title: 'Cl√≠nica de Salud Comunitaria',
        description: 'Proporcionar servicios b√°sicos de salud y orientaci√≥n m√©dica a la comunidad de Tlaquepaque.',
        organizationId: orgId,
        address: 'Plaza Principal Tlaquepaque',
        city: 'Tlaquepaque',
        state: 'Jalisco',
        country: 'M√©xico',
        startDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000), // 10 d√≠as en el futuro
        endDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000 + 8 * 60 * 60 * 1000), // 8 horas despu√©s
        maxVolunteers: 12,
        currentVolunteers: 9,
        skills: ['Atenci√≥n al cliente', 'Organizaci√≥n'],
        categoryId: 'cat_3',
        status: 'PUBLISHED',
        requirements: ['Disposici√≥n para ayudar', 'Buen trato con la gente'],
        benefits: ['Experiencia en salud p√∫blica', 'Networking m√©dico'],
        imageUrl: null
      },
      {
        id: 'event_5',
        title: 'Taller de Arte para Adultos Mayores',
        description: 'Actividades art√≠sticas y manualidades para promover la creatividad y socializaci√≥n en adultos mayores.',
        organizationId: orgId,
        address: 'Casa de la Cultura',
        city: 'Guadalajara',
        state: 'Jalisco',
        country: 'M√©xico',
        startDate: new Date(Date.now() + 12 * 24 * 60 * 60 * 1000), // 12 d√≠as en el futuro
        endDate: new Date(Date.now() + 12 * 24 * 60 * 60 * 1000 + 2 * 60 * 60 * 1000), // 2 horas despu√©s
        maxVolunteers: 8,
        currentVolunteers: 6,
        skills: ['Arte', 'Paciencia', 'Comunicaci√≥n'],
        categoryId: 'cat_7',
        status: 'PUBLISHED',
        requirements: ['Conocimientos b√°sicos de arte', 'Disposici√≥n para trabajar con adultos mayores'],
        benefits: ['Experiencia intergeneracional', 'Desarrollo de habilidades art√≠sticas'],
        imageUrl: null
      }
    ];

    for (const event of events) {
      await sql`
        INSERT INTO events (
          id, title, description, "organizationId", address, city, state, country,
          "startDate", "endDate", "maxVolunteers", "currentVolunteers", skills,
          "categoryId", status, requirements, benefits, "imageUrl", "createdAt", "updatedAt"
        ) VALUES (
          ${event.id}, ${event.title}, ${event.description}, ${event.organizationId},
          ${event.address}, ${event.city}, ${event.state}, ${event.country},
          ${event.startDate}, ${event.endDate}, ${event.maxVolunteers}, ${event.currentVolunteers},
          ${event.skills}, ${event.categoryId}, ${event.status}, ${event.requirements},
          ${event.benefits}, ${event.imageUrl}, ${new Date()}, ${new Date()}
        ) ON CONFLICT (id) DO UPDATE SET
          title = EXCLUDED.title,
          description = EXCLUDED.description,
          "startDate" = EXCLUDED."startDate",
          "endDate" = EXCLUDED."endDate",
          "updatedAt" = ${new Date()}
      `;
      console.log(`‚úÖ Evento creado: ${event.title}`);
    }

    console.log('üéâ ¬°Eventos de ejemplo insertados exitosamente!');
    console.log(`üìä Total de eventos creados: ${events.length}`);

  } catch (error) {
    console.error('‚ùå Error insertando eventos:', error);
  } finally {
    process.exit(0);
  }
}

seedEvents();






